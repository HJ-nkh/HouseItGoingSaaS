# -*- coding: utf-8 -*-
"""
Created on Thu May  5 12:29:00 2022

@author: Nicolas
"""

import pandas as pd
import numpy as np

class SteelBeams:
    def __init__(self):

        profile_dataset = {
            'Profile number': ['h [mm]', 'b [mm]', 'd [mm]', 't [mm]', 'r [mm]', 'A [mm^2]', 'u [m^2/m]', 'g [kg/m]', 'I_y [mm^4]', 'W_el,y [mm^3]', 'i_y [mm]','I_z [mm^4]', 'W_el,z [mm^3]', 'i_z [mm]', 'I_v [mm^4]', 'I_w [mm^6]', 'W_pl [mm^3]'],
            'HE100A': [96, 100, 5, 8, 12, 2120, 0.561, 16.7, 3490000, 72800, 40.6, 1340000, 26800, 25.1, 52600, 2580000000, 83000],
            'HE100B': [100, 100, 6, 10, 12, 2600, 0.567, 20.4, 4500000, 89900, 41.6, 1670000, 33500, 25.3, 92900, 3370000000, 104000],
            'HE120B': [120, 120, 6.5, 11, 12, 3400, 0.686, 26.7, 8640000, 144000, 50.4, 3180000, 52900, 30.6, 139000, 9410000000, 165000],
            'HE140B': [140, 140, 7, 12, 12,4300, 0.805, 33.7, 15100000, 216000, 59.3,5.5*10**6, 78.5*10**3, 35.8, 201*10**3, 22.5*10**9, 246*10**3],
            'HE160B': [160, 160, 8, 13, 15, 5.43*10**3, 0.918, 42.6, 24.9*10**6, 311*10**3, 67.8, 8.89*10**6, 111*10**3, 40.5, 314*10**3, 47.9*10**9, 354*10**3],
            'HE180B': [180, 180, 8.5, 14, 15, 6.53*10**3, 1.04, 51.2, 38.3*10**6, 426*10**3, 76.6, 13.6*10**6, 151*10**3, 45.7, 423*10**3, 93.7*10**9, 482*10**3],
            'HE200B': [200, 200, 9, 15, 18, 7.81*10**3, 1.15, 61.3, 57*10**6, 570*10**3, 85.4, 20*10**6, 200*10**3, 50.7, 595*10**3, 171*10**9, 642*10**3],
            'HE220B': [ 220, 220, 9.5, 16, 18, 9.1*10**3, 1.27, 71.5, 80.9*10**6, 736*10**3, 94.3, 28.4*10**6, 258*10**3, 55.9, 768*10**3, 295*10**9, 828*10**3],
            'HE240B': [240, 240, 10, 17, 21, 10.6*10**3, 1.38, 83.2, 112.6*10**6, 938*10**3, 103, 39.2*10**6, 327*10**3, 60.8, 1030*10**3, 487*10**9, 1054*10**3],
            'HE260B': [260, 260, 10, 17.5, 24, 11.8*10**3, 1.5, 93, 149.2*10**6, 1150*10**3, 112, 51.3*10**6, 395*10**3, 65.8, 1240*10**3, 754*10**9, 1282*10**3],
            'HE280B': [280, 280, 10.5, 18, 24, 13.1*10**3, 1.62, 103, 192.7*10**6, 1380*10**3, 121, 65.9*10**6, 471*10**3, 70.9, 1440*10**3, 1130*10**9, 1534*10**3],
            'IPE80':  [80, 46, 3.8, 5.2, 5, 746, 0.328, 6, 0.801*10**6, 20.2*10**3, 32.4, 0.085*10**6, 3.69*10**3, 10.5, 7*10**3, 0.118*10**9, 23.2*10**3],
            'IPE100': [100, 55, 4.1, 5.7, 7, 1.03*10**3, 0.400, 8.1, 1.71*10**6, 34.2*10**3, 40.7, 0.159*10**6, 5.79*10**3, 12.4, 12.1*10**3, 0.351*10**9, 39.4*10**3],
            'IPE120': [120, 64, 4.4, 6.3, 7, 1.32*10**3, 0.475, 10.4, 3.18*10**6, 53.0*10**3, 49.0, 0.277*10**6, 8.65*10**3, 14.5, 17.4*10**3, 0.890*10**9, 60.8*10**3],
            'IPE140': [140, 73, 4.7, 6.9, 7, 1.64*10**3, 0.551, 12.9, 5.41*10**6, 77.3*10**3, 57.4, 0.449*10**6, 12.3*10**3, 16.5, 24.5*10**3, 1.98*10**9, 88.4*10**3],
            'IPE160': [160, 82, 5.0, 7.4, 9, 2.01*10**3, 0.623, 15.8, 8.69*10**6, 109*10**3, 65.8, 0.683*10**6, 16.7*10**3, 18.4, 36.2*10**3, 3.96*10**9, 123.8*10**3],
            'IPE180': [180, 91, 5.3, 8.0, 9, 2.39*10**3, 0.698, 18.8, 13.2*10**6, 146*10**3, 74.2, 1.01*10**6, 22.2*10**3, 20.5, 48*10**3, 7.43*10**9, 166.4*10**3],
            'IPE200': [200, 100, 5.6, 8.5, 12, 2.85*10**3, 0.768, 22.4, 19.4*10**6, 194*10**3, 82.6, 1.42*10**6, 28.5*10**3, 22.4, 70.2*10**3, 13.0*10**9, 220*10**3],
            'IPE220': [220, 110, 5.9, 9.2, 12, 3.34*10**3, 0.848, 26.2, 27.7*10**6, 252*10**3, 91.1, 2.05*10**6, 37.3*10**3, 24.8, 91*10**3, 22.7*10**9, 286*10**3],
            'IPE240': [240, 120, 6.2, 9.8, 15, 3.91*10**3, 0.922, 30.7, 38.9*10**6, 324*10**3, 99.7, 2.84*10**6, 47.3*10**3, 26.9, 129*10**3, 37.4*10**9, 366*10**3],
            'IPE270': [270, 135, 6.6, 10.2, 15, 4.59*10**3, 1.04, 36.1, 57.9*10**6, 429*10**3, 112, 4.2*10**6, 62.2*10**3, 30.2, 160*10**3, 70.6*10**9, 484*10**3],
            'IPE300': [300, 150, 7.1, 10.7, 15, 5.38*10**3, 1.16, 42.2, 83.6*10**6, 557*10**3, 125, 6.04*10**6, 80.5*10**3, 33.5, 202*10**3, 126*10**9, 628*10**3],
            'IPE500': [500, 200, 10.2, 16.0, 21, 11.6*10**3, 1.74, 90.7, 482*10**6, 1930*10**3, 204, 21.4*10**6, 214*10**3, 43.1, 897*10**3, 1250*10**9, 2200*10**3],
            'RHS 50x25x3': [50, 25, np.nan, 3, 3, 0.391*10**3, 0.140, 3.1, 0.112*10**6, 4.47*10**3, 16.9, 0.037*10**6, 2.93*10**3, 9.7, 0.149*10**6, 1.17*10**6, 5.85*10**3],
            'RHS 50x50x3': [50, 50, np.nan, 3, 3, 0.554*10**3, 0.192, 4.35, 0.202*10**6, 8.08*10**3, 19.1, 0.202*10**6, 8.08*10**3, 19.1, 0.321*10**6, np.nan, 9.7*10**3],
            'RHS 50x50x5': [50, 50, np.nan, 5, 5, 0.873*10**3, 0.187, 6.85, 0.289*10**6, 11.6*10**3, 18.2, 0.289*10**6, 11.6*10**3, 18.2, 0.476*10**6, np.nan, 14.5*10**3],
            'RHS 60x60x3': [60, 60, np.nan, 3, 3, 0.674*10**3, 0.232, 5.29, 0.362*10**6, 12.1*10**3, 23.2, 0.362*10**6, 12.1*10**3, 23.2, 0.569*10**6, np.nan, 14.3*10**3],
            'RHS 60x60x5': [60, 60, np.nan, 5, 5, 1.073*10**3, 0.227, 8.42, 0.533*10**6, 17.8*10**3, 22.3, 0.533*10**6, 17.8*10**3, 22.3, 0.864*10**6, np.nan, 21.9*10**3],
            'RHS 70x70x3': [70, 70, np.nan, 3, 3, 0.794*10**3, 0.272, 6.24, 0.590*10**6, 16.9*10**3, 27.3, 0.590*10**6, 16.9*10**3, 27.3, 0.922*10**6, np.nan, 19.9*10**3],
            'RHS 80x80x3': [80, 80, np.nan, 3, 3, 0.910*10**3, 0.312, 7.18, 0.898*10**6, 22.5*10**3, 31.3, 0.898*10**6, 22.5*10**3, 31.3, 1.4*10**6, np.nan, 26.3*10**3],
            'RHS 90x90x4': [90, 90, np.nan, 4, 4, 1.36*10**3, 0.350, 10.7, 1.66*10**6, 37*10**3, 35, 1.66*10**6, 37*10**3, 35, 2.6*10**6, np.nan, 43.6*10**3],
            'RHS 120x120x5': [120, 120, np.nan, 5, 5, 2.27*10**3, 0.467, 17.8, 4.98*10**6, 83*10**3, 46.8, 4.98*10**6, 83*10**3, 46.8, 7.77*10**6, np.nan, 97.6*10**3],
            'UNP100': [100, 50, 6, 8.5, 8.5, 1.35*10**3, 0.372, 10.6, 2.06*10**6, 41.2*10**3, 39.1, 0.293*10**6, 8.49*10**3, 14.7, 28.1*10**3, 0.414*10**9, 49*10**3],
            'INP140': [140, 66, 5.7, 8.6, 109, 1.82*10**3, np.nan, np.nan, 5.73*10**6, 81.9*10**3, 56.1, 0.352*10**6, 10.7*10**3, 14, 43.2*10**3, 1.54*10**9, 95.4*10**3],
            'INP180': [180, 82, 6.9, 10.4, 6.9, 2.79*10**3, np.nan, np.nan, 14.5*10**6, 161*10**3, 72.0, 0.813*10**6, 19.8*10**3, 17.1, 95.8*10**3, 5.924*10**9, 187*10**3],}
        self.profile = pd.DataFrame(profile_dataset)
        self.profile.set_index("Profile number", inplace = True)
        
    def getArea(self, beamtype):
        return self.profile[beamtype]['A [mm^2]']*10**-6
    
    def getI_y(self, beamtype):
        return self.profile[beamtype]['I_y [mm^4]']*10**-12
    
    def getI_z(self, beamtype):
        return self.profile[beamtype]['I_z [mm^4]']*10**-12
    
    def getI_v(self, beamtype):
        return self.profile[beamtype]['I_v [mm^4]']*10**-12
    
    def getI_w(self, beamtype):
        return self.profile[beamtype]['I_w [mm^6]']*10**-18
    
    def getW_pl(self, beamtype):
        return self.profile[beamtype]['W_pl [mm^3]']*10**-9
    
    def getW_ely(self, beamtype):
        return self.profile[beamtype]['W_el,y [mm^3]']*10**-9
    
    def get_t(self, beamtype):
        return self.profile[beamtype]['t [mm]']*10**-3
    
    def get_d(self, beamtype):
        return self.profile[beamtype]['d [mm]']*10**-3
    
    def get_A(self, beamtype):
        return self.profile[beamtype]['A [mm^2]']*10**-6
    
    def get_r(self, beamtype):
        return self.profile[beamtype]['r [mm]']*10**-3
    
    def get_b(self, beamtype):
        return self.profile[beamtype]['b [mm]']*10**-3
    
    def get_h(self, beamtype):
        return self.profile[beamtype]['h [mm]']*10**-3
    
    def get_g(self, beamtype):
        return self.profile[beamtype]['g [kg/m]']